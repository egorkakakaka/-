// Лабораторная работа по теме Массивы 
// Выполнил Параонов Егор Сергеевич ИВТ13-БО
#include <stdio.h>
#include <stdlib.h>
void QuickSort(int* num, int left, int right)
{
	int p; // первый элемент
	int l = left; // левая граница
	int r = right; // правая граница
	p = num[left]; // присваиваем первый элемент
	while (left < right)
	{
		while ((num[right] >= p) && (left < right))
			right--; // сдвигаем пока r больше p
		if (left != right) // если границы не равны
		{
			num[left] = num[right]; // r ставим вместо 
			left++; // сдвигаем l вправо
		}
		while ((num[left] <= p) && (left < rig))
			left++; // сдвигаем l
		if (left != right) // если границы не равны
		{
			num[right] = num[left]; // снова меняем местами
			right--; // сдвигаем r
		}
	}
	num[left] = p; // возвращаем l 
	p = left;
	left = l;
	right = r;
	if (left < p) // рекурсия для левой части
		QuickSort(num, left, p - 1);
	if (right > p) // рекурсия для правой части
		QuickSort(num, p + 1, right);
}
int main()
{
	int i, s;
	int *a=NULL;
	printf("How many numbers you wont?");
	printf("\n");
	scanf_s("%d", &s); // количество символов в массиве
	a = malloc(sizeof(int)*S); // выделяем память
	if(a==NULL)
	{
		printf("Error memmory");
		return 0;
	}
	printf("Enter %d numbers", s);
	printf("\n");
	for (i = 0; i < s; i++)
		scanf_s("%d", &a[i]); // ввод
	QuickSort(a, 0, s - 1); // сортировка
	for ( i = 0; i < s; i++) // вывод
		printf("%4d ", a[i]);
	free(a);
	return 0;
}
