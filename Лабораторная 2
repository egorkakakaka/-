// Лабараторная работа по графам
// Работу выполнил Парамонов Егор Сергеевич ИВТ13-БО
// На вход поступает смежная матрица
#include <stdio.h>
#include <stdlib.h>
int put = 0; // предыдущя вершина
int start = 0; // начальная вершина вершина


int proverka(int *a, int str, int S)
{

	for (int i = 0; i < S; i++) // работаем в цикле только с столбиками, а строки меняем до этой проверки
	{
		if (str != start && put != start && (i == start && (a + str * S + i)))
			return 1;
		if (*(a + str * S + i) && i != put)
		{
			put = str;
			if (proverka(a, i, S))
				return 1;
		}
	}

	return 0;
}
int main()
{
	int i, j, S;
	int* a;
	printf("How many vertices you have in your graph?");
	printf("\n");
	scanf_s("%d", &S); // количество вершин графа
	a = malloc(sizeof(int) * S * S); // выделяем память
	printf("Enter the adjacency table.");
	printf("\n");
	for (i = 0; i < S; i++) // ввод смежной матрицы
		for (j = 0; j < S; j++)
			scanf_s("%d", (a + i * S + j));
	proverka(a, 0, S); // запускаем рекурсивную функцию
	int result = 0; // если вернется 1 то значит петля есть если 0 то петли нет
	i = 0;
	while (!result && i < S) // меняем строку
	{
		result = proverka(a, i, S);
		i++;
	}
	if (result)
		printf("Yes");
	else
		printf("No");

	free(a);
	return 0;
}
