// Лабараторная работа по графам
// Работу выполнил Парамонов Егор Сергеевич ИВТ13-БО
// На вход поступает матрица сежности, программа проверяет есть ли в данном графе циклы или их нет
#include <stdio.h>
#include <stdlib.h>
int put = 0; // предыдущя вершина
int start = 0; // начальная вершина вершина


int proverka(int *a, int str, int S)
{

	for (int i = 0; i < S; i++) // меняем столбцы
	{
// если текущая вершина не начальная, предыдущая першина не равна стартовой, текущий столбец равен начальному и стоит единица
		if (str != start && put != start && (i == start && *(a + str * S + i))) 
			return 1; 
// если в матрице единиться а столбец не равен исходному, меняем строку и вызываем на проверку данную вершину
		if (*(a + str * S + i) && i != put)
		{
			put = str; // присваеваем прошлую вершину и вызываем функцию с новой вершиной
			if (proverka(a, i, S))
				return 1;
		}
	}

	return 0;
}
int main()
{
	int i, j, S;
	int* a;
	printf("How many vertices you have in your graph?");
	printf("\n");
	scanf_s("%d", &S); // количество вершин графа
	a = malloc(sizeof(int) * S * S); // выделяем память
	printf("Enter the adjacency table.");
	printf("\n");
	for (i = 0; i < S; i++) // ввод смежной матрицы
		for (j = 0; j < S; j++)
			scanf_s("%d", (a + i * S + j));
	int result = proverka(a, 0, S); // если вернется 1 то значит петля есть если 0 то петли нет
	if (result)
		printf("Yes");
	else
		printf("No");

	free(a);
	return 0;
}
